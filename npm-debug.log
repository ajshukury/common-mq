0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@1.4.14
3 info using node@v0.10.29
4 verbose node symlink C:\Program Files\nodejs\\node.exe
5 verbose publish [ '.' ]
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . C:\Users\lloyd_000\AppData\Roaming\npm-cache\3a52ce78-.lock
11 verbose tar pack [ 'C:\\Users\\lloyd_000\\AppData\\Roaming\\npm-cache\\common-mq\\0.2.1\\package.tgz',
11 verbose tar pack   '.' ]
12 verbose tarball C:\Users\lloyd_000\AppData\Roaming\npm-cache\common-mq\0.2.1\package.tgz
13 verbose folder .
14 info prepublish common-mq@0.2.1
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. C:\Users\lloyd_000\AppData\Roaming\npm-cache\1f1177db-tar.lock
17 silly lockFile fd5ebe9a-ache-common-mq-0-2-1-package-tgz tar://C:\Users\lloyd_000\AppData\Roaming\npm-cache\common-mq\0.2.1\package.tgz
18 verbose lock tar://C:\Users\lloyd_000\AppData\Roaming\npm-cache\common-mq\0.2.1\package.tgz C:\Users\lloyd_000\AppData\Roaming\npm-cache\fd5ebe9a-ache-common-mq-0-2-1-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile fd5ebe9a-ache-common-mq-0-2-1-package-tgz tar://C:\Users\lloyd_000\AppData\Roaming\npm-cache\common-mq\0.2.1\package.tgz
22 silly lockFile fd5ebe9a-ache-common-mq-0-2-1-package-tgz tar://C:\Users\lloyd_000\AppData\Roaming\npm-cache\common-mq\0.2.1\package.tgz
23 silly lockFile 67b92eb1-pm-cache-common-mq-0-2-1-package C:\Users\lloyd_000\AppData\Roaming\npm-cache\common-mq\0.2.1\package
24 verbose lock C:\Users\lloyd_000\AppData\Roaming\npm-cache\common-mq\0.2.1\package C:\Users\lloyd_000\AppData\Roaming\npm-cache\67b92eb1-pm-cache-common-mq-0-2-1-package.lock
25 silly lockFile 67b92eb1-pm-cache-common-mq-0-2-1-package C:\Users\lloyd_000\AppData\Roaming\npm-cache\common-mq\0.2.1\package
26 silly lockFile 67b92eb1-pm-cache-common-mq-0-2-1-package C:\Users\lloyd_000\AppData\Roaming\npm-cache\common-mq\0.2.1\package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'common-mq',
29 silly publish   version: '0.2.1',
29 silly publish   description: 'Abstracted message queue client for node.js supporting multiple message queue providers.',
29 silly publish   main: 'index.js',
29 silly publish   scripts: { test: 'mocha --reporter spec' },
29 silly publish   author: { name: 'Lloyd Cotten' },
29 silly publish   license: 'MIT',
29 silly publish   dependencies:
29 silly publish    { async: '~0.2',
29 silly publish      'aws-sdk': '~1.3',
29 silly publish      amqp: '~0.1.7',
29 silly publish      zmq: '~2.4.0' },
29 silly publish   optionalDependencies: { 'aws-sdk': '~1.3', amqp: '~0.1.7', zmq: '~2.4.0' },
29 silly publish   repository:
29 silly publish    { type: 'git',
29 silly publish      url: 'https://github.com/lloydcotten/common-mq.git' },
29 silly publish   readme: '# common-mq\r\n\r\ncommon-mq is an abstracted message queue client module with a clean, common API for working with various message queue providers.\r\n\r\n## Provider Support\r\n\r\ncommon-mq supports the following message queue providers \r\n* AMQP [TODO]\r\n* STOMP [TODO]\r\n* RabbitMQ [TODO]\r\n* ï¿½MQ [TODO]\r\n* Amazon AWS SQS\r\n    \r\n## Installation\r\n\r\n    % npm install common-mq\r\n\r\n## Usage Example\r\n\r\n    var mq = require(\'common-mq\');\r\n    \r\n    var queue = mq.connect(\'sqs://todos\', {\r\n    \r\n      // delete the message after emitting \'message\' event\r\n      deleteAfterReceive: true, \r\n      \r\n      // SQS queue specific attributes\r\n      attributes: { \r\n        VisibilityTimeout: \'60\',\r\n        ReceiveMessageWaitTimeSeconds: \'20\'\r\n      },\r\n      \r\n      // AWS config\r\n      awsConfig: {  \r\n        accessKeyId: \'ACCESS_KEY_HERE\',\r\n        secretAccessKey: \'SECRET_KEY_HERE\',\r\n        region: \'us-east-1\'\r\n        maxRetries: 10\r\n      }\r\n      \r\n    });\r\n    \r\n    queue.on(\'ready\', function() {\r\n      setTimeout(function() { queue.publish({ task: \'take out trash\' }); }, 1000);\r\n      setTimeout(function() { queue.publish({ task: \'wash dishes\' }); }, 5000);\r\n      setTimeout(function() { queue.publish({ task: \'sweep floor\' }); }, 6000);\r\n    });\r\n    \r\n    queue.on(\'error\', function(err) {\r\n      console.log(err);\r\n    });\r\n    \r\n    queue.on(\'message\', function(message) {\r\n      console.log(message);\r\n    });   \r\n    \r\n## Documentation\r\n\r\n### Connecting to a Queue\r\n#### .connect(url [, options])\r\nConnects to a queue using a URL scheme (i.e, provider://hostname/queue).  The optional `options` argument passes provider specific configuration (see [Providers](#providers) section below).  \r\n\r\nReturns a reference to a queue.\r\n\r\n    var queue = require(\'common-mq\').connect(\'amqp://localhost/todos\');\r\n\r\n#### .connect(options)\r\nConnects to a queue using a config/options.  Provider, hostname, and queue name are all passed as properties of the `options` object (see [Providers](#providers) section below).  \r\n\r\nReturns a reference to a queue.\r\n\r\n    var queue = require(\'common-mq\').connect(\'amqp://localhost/todos\', { \r\n      implOptions: { defaultExchangeName: \'\' } \r\n    });\r\n\r\n### Class: Queue\r\n#### Event: \'ready\'\r\nEmitted when the queue is ready to publish or start start receiving messages.\r\n\r\n#### Event: \'message\'\r\nAttaching the first listener to the `\'message\'` event will automatically subscribe to the queue.  When a message is received from the queue, the `\'message\'` event is emitted to all listeners.\r\n\r\nArguments:\r\n\r\n* message `string|object|Buffer`\r\n* messageId `string`\r\n\r\n#### Event: \'error\'\r\nEmitted if an error occurs while communicating with the queue or receiving messages.\r\n\r\nArguments:\r\n\r\n* error `Error`\r\n\r\n#### .publish(message)\r\nPublishes a message to the queue.  The message can be a JavaScript object, a string, or a Buffer.\r\n\r\n#### .ack(messageId)\r\nIf the queue does not support automatically removing messages (once received by a subscriber), or this option is turned off in the options, you will need to call the the `.ack()` method once you have successfully received the message.  The underlying queue provider implementation will handle deleting or acknowledging the message, depending how that particular queue provider handles this concept.\r\n\r\nThe `messageId` will be the same as passed by the `\'message\'` event callback.\r\n\r\n### Providers\r\n\r\n#### AMQP\r\n\r\n#### Amazon SQS\r\n\r\n    \r\n## License\r\n\r\n    The MIT License (MIT)\r\n\r\n    Copyright (c) 2013 Lloyd Cotten.\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the "Software"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n\r\n    The above copyright notice and this permission notice shall be included in\r\n    all copies or substantial portions of the Software.\r\n\r\n    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n    THE SOFTWARE.\r\n',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: 'ed6e112e101541814641658349564fb2ff9a56e5',
29 silly publish   bugs: { url: 'https://github.com/lloydcotten/common-mq/issues' },
29 silly publish   homepage: 'https://github.com/lloydcotten/common-mq',
29 silly publish   _id: 'common-mq@0.2.1',
29 silly publish   _shasum: 'f38914626c3eb4e16601b21a74cc86fc9b622c13',
29 silly publish   _from: '.' }
30 verbose url raw common-mq
31 verbose url resolving [ 'https://registry.npmjs.org/', './common-mq' ]
32 verbose url resolved https://registry.npmjs.org/common-mq
33 info trying registry request attempt 1 at 13:27:45
34 http PUT https://registry.npmjs.org/common-mq
35 http 403 https://registry.npmjs.org/common-mq
36 verbose headers { date: 'Wed, 18 Jun 2014 15:57:46 GMT',
36 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
36 verbose headers   'content-type': 'application/json',
36 verbose headers   'cache-control': 'max-age=30',
36 verbose headers   'content-length': '8426',
36 verbose headers   'accept-ranges': 'bytes',
36 verbose headers   via: '1.1 varnish',
36 verbose headers   'x-served-by': 'cache-jfk1028-JFK',
36 verbose headers   'x-cache': 'MISS',
36 verbose headers   'x-cache-hits': '0',
36 verbose headers   'x-timer': 'S1403107066.324689,VS0,VE335',
36 verbose headers   'keep-alive': 'timeout=10, max=50',
36 verbose headers   connection: 'Keep-Alive' }
37 error publish Failed PUT 403
38 error Error: forbidden cannot modify pre-existing version: 0.2.1
38 error old={"name":"common-mq","version":"0.2.1","description":"Abstracted message queue client for node.js supporting multiple message queue providers.","main":"index.js","scripts":{"test":"mocha --reporter spec"},"author":{"name":"Lloyd Cotten"},"license":"MIT","dependencies":{"aws-sdk":"~1.3","async":"~0.2","amqp":"~0.1.7","zmq":"~2.4.0"},"repository":{"type":"git","url":"https://github.com/lloydcotten/common-mq.git"},"bugs":{"url":"https://github.com/lloydcotten/common-mq/issues"},"_id":"common-mq@0.2.1","dist":{"shasum":"c3563da893dcbb974fc791bd1486e7cc27a36913","tarball":"http://registry.npmjs.org/common-mq/-/common-mq-0.2.1.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"lloydcotten","email":"lloyd@lloydcotten.com"},"maintainers":[{"name":"lloydcotten","email":"lloyd@lloydcotten.com"}]}
38 error new={"name":"common-mq","version":"0.2.1","description":"Abstracted message queue client for node.js supporting multiple message queue providers.","main":"index.js","scripts":{"test":"mocha --reporter spec"},"author":{"name":"Lloyd Cotten"},"license":"MIT","dependencies":{"async":"~0.2","aws-sdk":"~1.3","amqp":"~0.1.7","zmq":"~2.4.0"},"optionalDependencies":{"aws-sdk":"~1.3","amqp":"~0.1.7","zmq":"~2.4.0"},"repository":{"type":"git","url":"https://github.com/lloydcotten/common-mq.git"},"readme":"# common-mq\u000d\u000a\u000d\u000acommon-mq is an abstracted message queue client module with a clean, common API for working with various message queue providers.\u000d\u000a\u000d\u000a## Provider Support\u000d\u000a\u000d\u000acommon-mq supports the following message queue providers \u000d\u000a* AMQP [TODO]\u000d\u000a* STOMP [TODO]\u000d\u000a* RabbitMQ [TODO]\u000d\u000a* ï¿½MQ [TODO]\u000d\u000a* Amazon AWS SQS\u000d\u000a    \u000d\u000a## Installation\u000d\u000a\u000d\u000a    % npm install common-mq\u000d\u000a\u000d\u000a## Usage Example\u000d\u000a\u000d\u000a    var mq = require('common-mq');\u000d\u000a    \u000d\u000a    var queue = mq.connect('sqs://todos', {\u000d\u000a    \u000d\u000a      // delete the message after emitting 'message' event\u000d\u000a      deleteAfterReceive: true, \u000d\u000a      \u000d\u000a      // SQS queue specific attributes\u000d\u000a      attributes: { \u000d\u000a        VisibilityTimeout: '60',\u000d\u000a        ReceiveMessageWaitTimeSeconds: '20'\u000d\u000a      },\u000d\u000a      \u000d\u000a      // AWS config\u000d\u000a      awsConfig: {  \u000d\u000a        accessKeyId: 'ACCESS_KEY_HERE',\u000d\u000a        secretAccessKey: 'SECRET_KEY_HERE',\u000d\u000a        region: 'us-east-1'\u000d\u000a        maxRetries: 10\u000d\u000a      }\u000d\u000a      \u000d\u000a    });\u000d\u000a    \u000d\u000a    queue.on('ready', function() {\u000d\u000a      setTimeout(function() { queue.publish({ task: 'take out trash' }); }, 1000);\u000d\u000a      setTimeout(function() { queue.publish({ task: 'wash dishes' }); }, 5000);\u000d\u000a      setTimeout(function() { queue.publish({ task: 'sweep floor' }); }, 6000);\u000d\u000a    });\u000d\u000a    \u000d\u000a    queue.on('error', function(err) {\u000d\u000a      console.log(err);\u000d\u000a    });\u000d\u000a    \u000d\u000a    queue.on('message', function(message) {\u000d\u000a      console.log(message);\u000d\u000a    });   \u000d\u000a    \u000d\u000a## Documentation\u000d\u000a\u000d\u000a### Connecting to a Queue\u000d\u000a#### .connect(url [, options])\u000d\u000aConnects to a queue using a URL scheme (i.e, provider://hostname/queue).  The optional `options` argument passes provider specific configuration (see [Providers](#providers) section below).  \u000d\u000a\u000d\u000aReturns a reference to a queue.\u000d\u000a\u000d\u000a    var queue = require('common-mq').connect('amqp://localhost/todos');\u000d\u000a\u000d\u000a#### .connect(options)\u000d\u000aConnects to a queue using a config/options.  Provider, hostname, and queue name are all passed as properties of the `options` object (see [Providers](#providers) section below).  \u000d\u000a\u000d\u000aReturns a reference to a queue.\u000d\u000a\u000d\u000a    var queue = require('common-mq').connect('amqp://localhost/todos', { \u000d\u000a      implOptions: { defaultExchangeName: '' } \u000d\u000a    });\u000d\u000a\u000d\u000a### Class: Queue\u000d\u000a#### Event: 'ready'\u000d\u000aEmitted when the queue is ready to publish or start start receiving messages.\u000d\u000a\u000d\u000a#### Event: 'message'\u000d\u000aAttaching the first listener to the `'message'` event will automatically subscribe to the queue.  When a message is received from the queue, the `'message'` event is emitted to all listeners.\u000d\u000a\u000d\u000aArguments:\u000d\u000a\u000d\u000a* message `string|object|Buffer`\u000d\u000a* messageId `string`\u000d\u000a\u000d\u000a#### Event: 'error'\u000d\u000aEmitted if an error occurs while communicating with the queue or receiving messages.\u000d\u000a\u000d\u000aArguments:\u000d\u000a\u000d\u000a* error `Error`\u000d\u000a\u000d\u000a#### .publish(message)\u000d\u000aPublishes a message to the queue.  The message can be a JavaScript object, a string, or a Buffer.\u000d\u000a\u000d\u000a#### .ack(messageId)\u000d\u000aIf the queue does not support automatically removing messages (once received by a subscriber), or this option is turned off in the options, you will need to call the the `.ack()` method once you have successfully received the message.  The underlying queue provider implementation will handle deleting or acknowledging the message, depending how that particular queue provider handles this concept.\u000d\u000a\u000d\u000aThe `messageId` will be the same as passed by the `'message'` event callback.\u000d\u000a\u000d\u000a### Providers\u000d\u000a\u000d\u000a#### AMQP\u000d\u000a\u000d\u000a#### Amazon SQS\u000d\u000a\u000d\u000a    \u000d\u000a## License\u000d\u000a\u000d\u000a    The MIT License (MIT)\u000d\u000a\u000d\u000a    Copyright (c) 2013 Lloyd Cotten.\u000d\u000a\u000d\u000a    Permission is hereby granted, free of charge, to any person obtaining a copy\u000d\u000a    of this software and associated documentation files (the \"Software\"), to deal\u000d\u000a    in the Software without restriction, including without limitation the rights\u000d\u000a    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\u000d\u000a    copies of the Software, and to permit persons to whom the Software is\u000d\u000a    furnished to do so, subject to the following conditions:\u000d\u000a\u000d\u000a    The above copyright notice and this permission notice shall be included in\u000d\u000a    all copies or substantial portions of the Software.\u000d\u000a\u000d\u000a    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\u000d\u000a    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\u000d\u000a    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\u000d\u000a    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\u000d\u000a    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\u000d\u000a    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\u000d\u000a    THE SOFTWARE.\u000d\u000a","readmeFilename":"README.md","gitHead":"ed6e112e101541814641658349564fb2ff9a56e5","bugs":{"url":"https://github.com/lloydcotten/common-mq/issues"},"homepage":"https://github.com/lloydcotten/common-mq","_id":"common-mq@0.2.1","_shasum":"f38914626c3eb4e16601b21a74cc86fc9b622c13","_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"lloydcotten","email":"lloyd@lloydcotten.com"},"maintainers":[{"name":"lloydcotten","email":"lloyd@lloydcotten.com"}],"dist":{"shasum":"f38914626c3eb4e16601b21a74cc86fc9b622c13","tarball":"http://registry.npmjs.org/common-mq/-/common-mq-0.2.1.tgz"}}: common-mq
38 error     at RegClient.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:274:14)
38 error     at Request._callback (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:212:65)
38 error     at Request.self.callback (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:123:22)
38 error     at Request.emit (events.js:98:17)
38 error     at Request.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:893:14)
38 error     at Request.emit (events.js:117:20)
38 error     at IncomingMessage.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:844:12)
38 error     at IncomingMessage.emit (events.js:117:20)
38 error     at _stream_readable.js:929:16
38 error     at process._tickCallback (node.js:419:13)
39 error If you need help, you may report this *entire* log,
39 error including the npm and node versions, at:
39 error     <http://github.com/npm/npm/issues>
40 error System Windows_NT 6.2.9200
41 error command "C:\\Program Files\\nodejs\\\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
42 error cwd C:\Users\lloyd_000\Documents\GitHub\common-mq
43 error node -v v0.10.29
44 error npm -v 1.4.14
45 verbose exit [ 1, true ]
